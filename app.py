import streamlit as st
from supabase import create_client, Client
import json
from io import BytesIO

st.set_page_config(page_title="S√°ntas√°g Annot√°ci√≥")

# --- Oldal navig√°ci√≥ ---
st.sidebar.title("Navig√°ci√≥")
page = st.sidebar.radio("Oldalak", ["Supabase Konfigur√°ci√≥", "F≈ëoldal"])


# ---------------- Supabase konfigur√°ci√≥ ----------------
if page == "Supabase Konfigur√°ci√≥":
    st.title("üîß Supabase Konfigur√°ci√≥")
    SUPABASE_URL = st.text_input("Supabase URL", "https://sxamusxpevlkmdvbuqua.supabase.co")
    SUPABASE_KEY = st.text_input("Supabase API Key", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InN4YW11c3hwZXZsa21kdmJ1cXVhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5MzA0NDEsImV4cCI6MjA3MzUwNjQ0MX0.E-XSEUmXXGyP3Zh8xdrQJzmrQC_4Tl4lBV0xSfrHErI", type="password")
    BUCKET_NAME = st.text_input("K√©pek bucket neve", "santasag_annotalas")
    ANNOT_BUCKET = st.text_input("Annot√°ci√≥k bucket neve", "annotations")

    if st.button("Ment√©s"):
        if not SUPABASE_URL or not SUPABASE_KEY or not BUCKET_NAME or not ANNOT_BUCKET:
            st.warning("K√©rlek, t√∂ltsd ki az √∂sszes mez≈ët a ment√©shez.")
        else:
            st.session_state["supabase_config"] = {
                "url": SUPABASE_URL,
                "key": SUPABASE_KEY,
                "bucket_name": BUCKET_NAME,
                "annotations_bucket_name": ANNOT_BUCKET
            }
            st.success("‚úÖ Konfigur√°ci√≥ mentve!")

elif page == "F≈ëoldal":
    # Ellen≈ërizze, hogy a konfigur√°ci√≥ el√©rhet≈ë-e
    if "supabase_config" not in st.session_state:
        st.warning("El≈ësz√∂r √°ll√≠tsd be a Supabase konfigur√°ci√≥t a bal oldali men√ºben.")
        st.stop()

    # --- Supabase kliens inicializ√°l√°sa ---
    config = st.session_state["supabase_config"]
    supabase = create_client(config["url"], config["key"])
    BUCKET_NAME = config["bucket_name"]
    ANNOT_BUCKET = config["annotations_bucket_name"]

    # ---------------- Bejelentkez√©s ----------------
    st.title("ü©∫ S√°ntas√°g Annot√°ci√≥s Fel√ºlet")

    if "user" not in st.session_state:
        st.session_state.user = None

    if st.session_state.user is None:
        email = st.text_input("Email", "testuser@gmail.com")
        password = st.text_input("Jelsz√≥", "123456", type="password")
        if st.button("Bejelentkez√©s"):
            try:
                user = supabase.auth.sign_in_with_password({"email": email, "password": password})
                st.session_state.user = user
                st.session_state["email"] = user.user.email
                st.session_state["supabase_config"] = {
                    "url": config["url"],
                    "key": config["key"],
                    "bucket_name": BUCKET_NAME,
                    "annotations_bucket_name": ANNOT_BUCKET
                }
                st.success("Sikeres bejelentkez√©s!")
                st.rerun()
            except Exception as e:
                st.error(f"Hiba a bejelentkez√©skor: {e}")
        st.stop()

    # ---------------- K√©pek list√°z√°sa ----------------
    # Lek√©rj√ºk a k√©peket a bucketb≈ël
    all_files = supabase.storage.from_(BUCKET_NAME).list()
    all_file_names = [f["name"] for f in all_files]

    # Lek√©rj√ºk az annot√°ci√≥kat, hogy ne jelenjenek meg √∫jra
    annot_files = supabase.storage.from_(ANNOT_BUCKET).list()
    # Kinyerj√ºk az annot√°lt f√°jlok nev√©t a .json kiterjeszt√©s n√©lk√ºl
    annotated_file_names_with_extension = [f["name"] for f in annot_files]
    annotated_file_names = [f.replace(".json", "") for f in annotated_file_names_with_extension]

    # Csak a m√©g annot√°latlan k√©pek a megadott k√©pek bucketj√©b≈ël
    files_to_annotate = [f for f in all_file_names if f not in annotated_file_names]

    if not files_to_annotate:
        st.info("Minden k√©p m√°r annot√°lva van!")
        st.stop()

    selected_image = st.selectbox("V√°lassz k√©pet annot√°l√°shoz:", files_to_annotate)

    # ---------------- K√©p megjelen√≠t√©se ----------------
    if selected_image:
        image_url = supabase.storage.from_(BUCKET_NAME).get_public_url(selected_image)
        st.image(image_url)

        # ---------------- Annot√°ci√≥ ----------------
        label = st.radio("Annot√°ci√≥:", ["s√°nta", "nem s√°nta", "nem eld√∂nthet≈ë", "s√∫lypont√°thelyez√©s", "O-l√°b√∫", "sz√©tt√°rt lab√∫"])
        comment = st.text_area("Megjegyz√©s:")

        st.markdown(
            """
            <style>
            div.stButton > button:first-child {
                background-color: green;
                color: white;
                border: none;
                padding: 10px 20px;
                text-align: center;
                text-decoration: none;
                display: inline-block;
                font-size: 16px;
                margin: 4px 2px;
                cursor: pointer;
                border-radius: 5px;
            }
            div.stButton > button:first-child:hover {
                background-color: darkgreen;
            }
            </style>
            """,
            unsafe_allow_html=True
        )

        if st.button("üíæ Ment√©s", use_container_width=True):
            if label:
                # JSON l√©trehoz√°sa √©s bytes-√° konvert√°l√°sa
                annotation = {
                    "file": selected_image,
                    "label": label,
                    "comment": comment,
                    "annotator": st.session_state.user.user.email # Hozz√°adva a felhaszn√°l√≥ email c√≠me
                }
                json_bytes = json.dumps(annotation).encode("utf-8")

                try:
                    # Ha l√©tezik a f√°jl, t√∂rl√©s (fel√ºl√≠r√°shoz)
                    supabase.storage.from_(ANNOT_BUCKET).remove([f"{selected_image}.json"])
                except:
                    pass  # Ha m√©g nem l√©tezik, ne dobjon hib√°t

                try:
                    # Felt√∂lt√©s
                    supabase.storage.from_(ANNOT_BUCKET).upload(
                        path=f"{selected_image}.json",
                        file=json_bytes
                    )
                    st.success(f"Annot√°ci√≥ mentve: {selected_image}.json")
                except Exception as e:
                    st.error(f"Hiba t√∂rt√©nt a ment√©s sor√°n: {e}")

                # Automatikus v√°lt√°s a k√∂vetkez≈ë k√©pre
                # Friss√≠tj√ºk a files_to_annotate list√°t a sikeres ment√©s ut√°n
                all_files = supabase.storage.from_(BUCKET_NAME).list()
                all_file_names = [f["name"] for f in all_files]
                annot_files = supabase.storage.from_(ANNOT_BUCKET).list()
                annotated_file_names_with_extension = [f["name"] for f in annot_files]
                annotated_file_names = [f.replace(".json", "") for f in annotated_file_names_with_extension]
                files_to_annotate = [f for f in all_file_names if f not in annotated_file_names]

                if files_to_annotate:
                    current_index = files_to_annotate.index(selected_image) if selected_image in files_to_annotate else -1
                    if current_index != -1 and current_index + 1 < len(files_to_annotate):
                         st.session_state["selected_image"] = files_to_annotate[current_index + 1]
                    elif files_to_annotate: # Ha a v√©g√©n j√°runk, vagy a kiv√°lasztott k√©p m√°r nincs a list√°ban, de van m√©g annot√°land√≥ k√©p
                         st.session_state["selected_image"] = files_to_annotate[0]
                    st.rerun()
                else:
                     st.info("Minden k√©p m√°r annot√°lva van!")
                     st.session_state["selected_image"] = None # T√∂r√∂lj√ºk a kiv√°lasztott k√©pet
                     st.rerun()


            else:
                st.warning("V√°lassz egy kateg√≥ri√°t a ment√©shez!")

    # Progress bar
    # Kisz√°moljuk a teljes k√©pek sz√°m√°t a k√©pek bucketj√©ben
    total_images = len(all_file_names)

    # Kisz√°moljuk az annot√°lt k√©pek sz√°m√°t, amelyek a k√©pek bucketj√©ben l√©v≈ë k√©pekhez tartoznak
    annotated_images_in_bucket = [f for f in annotated_file_names if f in all_file_names]
    num_annotated = len(annotated_images_in_bucket)


    if total_images > 0:
        progress = num_annotated / total_images
        st.progress(progress)
        st.write(f"Annot√°lt k√©pek: {num_annotated}/{total_images}")
    else:
        st.write("Nincsenek k√©pek a megadott bucketben.")
